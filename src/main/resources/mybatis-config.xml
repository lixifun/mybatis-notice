<?xml version="1.0" encoding="UTF-8" ?>

<!-- 此处的 mybatis-3-config.dtd 是 mybatis-config 的约束文件 用于校验 xml 是否合法，还有在 idea 中输入的时候的引导 -->
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">



<configuration>

    <!-- 加载外部资源文件
         resource 加载类路径下的文件
         url 加载网络资源或者磁盘资源
    -->
    <properties resource="classpath:db.config"/>

    
    <settings>
        <!-- 全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。
             默认是 true

             注意上面描述中的 "映射器配置文件" 即 mapper.xml 中配置的缓存
             也就是 二级缓存

             如果改为 false 禁用的是二级缓存

             二级缓存想要生效
                 1. 这里的 cacheEnabled 开启
                 2. 在 mapper.xml 中配置 <cache></cache>

             对于单个 select 标签中的 useCache="true|false" 也是指的二级缓存

             对于每个 增删改 （没有查） 默认的 flushCache="true" 一级缓存和二级缓存都会被清空
        -->
        <setting name="cacheEnabled" value="true"/>

        <!--
            MyBatis 利用本地缓存机制（Local Cache）防止循环引用和加速重复的嵌套查询。
            默认值为 SESSION，会缓存一个会话中执行的所有查询。
            若设置值为 STATEMENT，本地缓存将仅用于执行语句，
            对相同 SqlSession 的不同查询将不会进行缓存。

            这说的是 一级缓存
        -->
        <setting name="localCacheScope" value="true"/>

        <!--
            当没有为参数指定特定的 JDBC 类型时，空值的默认 JDBC 类型。
            某些数据库驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，
            比如 NULL、VARCHAR 或 OTHER。

            默认为 OTHER 但是 Oracle 对 null 值就会抛异常
            所以一般这里改为 NULL
        -->
        <setting name="jdbcTypeForNull" value="NULL"/>

    </settings>

    <typeAliases>
        <!--
            可以给某个 java 类型起别名
            type: 指定要起别名的类型的全类名，默认名称是类名全小写

            别名不区分大小写

            alias 指定新的别名
        -->
        <typeAlias type="com.nevertrouble.demo.mybatisone.bean.Blog" alias="blog"/>

        <!--
            批量起别名
            为当前包以及下面的所有后代的每一个类都起一个别名

            批量起别名的，如果有重复的，可以使用 @Alias 注解为某个类型指定新的别名
        -->
        <package name="com.nevertrouble.demo.mybatisone.bean"/>

        <!--
            内建的 alias，对于基本类型是 下划线加小写的类型，如 _int, _long

            对于包装类型以及其他常用类型为全小写类型名
        -->
    </typeAliases>

    <typeHandlers>
        <!--
            知识点： JSR310 (Date and Time API) 使用 mybatis-typehandlers-jsr310

            Mybatis 3.4 及以后不再需要特殊指定时间处理器
        -->
    </typeHandlers>


    <!--<plugins> 暂不使用-->



    <environments default="development">

        <!--
            可以配置多种环境 方便不同环境使用
            必须有两个标签
                1. transactionManager 事务管理器
                    type: 事务管理器的类型
                        - JDBC (JdbcTransactionFactory 的别名)
                        - MANAGED (ManagedTransactionFactory)
                        - 自定义事务管理器 (TransactionFactory 接口的实现类的全类名)
                2. dataSource 数据源
                    type:
                        - UNPOOLED (UnpooledDataSourceFactory)
                        - POOLED (PooledDataSourceFactory) 最常用
                        - JNDI (JNDIDataSourceFactory)
                        - 自定义，如 c3p0 之类的实现了 DataSourceFactory 接口
        -->
        <environment id="development">

            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--
        得到数据库厂商的标识
        getDatabaseProductName()

        在 mapper.xml 中就可以使用
        <select id="aaa" databaseId="mysql">
        <select id="aaa" databaseId="oracle">

        两个可以同时出现，当使用不同数据库时使用的是不同的 select
    -->
    <databaseIdProvider type="DB_VENDOR">
        <!--给不同的数据库厂商起别名，除非有更换数据库，不同数据库才使用下面的-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!--
        将 sql 映射注册到全局配置中
    -->
    <mappers>

        <!--
            每个 mapper 注册一个 sql 映射

            class 引用（注册）接口
                1. 有 sql 映射文件，映射文件必须和接口同名，并且放在与接口同一目录下
                2. 没有 sql 映射文件，所有的 sql 都是利用注解写在接口上

            这个在 spring 和 springboot 集成中不再使用
            改为使用 mapperLocations 属性设置
        -->

        <mapper resource="org/mybatis/example/BlogMapper.xml"/>

        <!--
            批量注册，name 是包名
            批量注册下，映射文件名必须和接口同名，并且放在与接口同一目录下

            这里 同一目录，可以在 resources 目录下建立和接口同名目录，最终打包后会在一起

            同样在 spring 和 springboot 集成中不再使用
            改为使用 mapperLocations 属性设置
        -->
        <package name="com.nevertrouble.demo.mybatisone.dao"/>
    </mappers>
</configuration>
